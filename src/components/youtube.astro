---
import YoutubePlayerManager from "./YoutubePlayerManager";
---

<div class="youtube-player-wrapper">
	<div id="YouTubeVideoPlayer"></div>
	<div class="video-volume-control"></div>
</div>

<script
	is:inline
	define:vars={{
		YouTubePlayerManager: YoutubePlayerManager,
	}}
>
	let playerManager;

	// This function will be called by YouTube API when it's ready
	function onYouTubeIframeAPIReady() {
		console.log("YouTube API Ready");
		playerManager.createPlayer(
			{
				elementId: "YouTubeVideoPlayer",
				videoId: "qYp3KqUEzWE",
			},
			function (player) {
				console.log("Player is ready");
			}
		);
	}

	// Initialize everything else when the DOM is ready
	document.addEventListener("DOMContentLoaded", function () {
		// Initialize the manager
		playerManager = new YouTubePlayerManager();

		// Add styles for iframe sizing
		const VIEWPORT_WIDTH = Math.max(
			document.documentElement.clientWidth || 0,
			window.innerWidth || 0
		);
		const VIDEO_WIDTH = VIEWPORT_WIDTH;
		const VIDEO_HEIGHT = VIDEO_WIDTH * 0.5625;
		const BASE_HEIGHT = Math.max(VIDEO_HEIGHT * 1.5, 300);

		const BLACK_SPACE_HEIGHT = BASE_HEIGHT - VIDEO_HEIGHT;
		const BLACK_SPACE_HEIGHT_HALF = BLACK_SPACE_HEIGHT / 2;

		const webcastIframe = document.querySelector("#YouTubeVideoPlayer");
		const wrapper = document.querySelector(".youtube-player-wrapper");

		if (webcastIframe) {
			webcastIframe.style.height = `${BASE_HEIGHT}px`;
			webcastIframe.style.width = `${VIDEO_WIDTH}px`;
			webcastIframe.style.transform = `translateY(-${BLACK_SPACE_HEIGHT_HALF}px)`;
			webcastIframe.style.userSelect = "none";
		}

		if (wrapper) {
			wrapper.style.width = `${VIDEO_WIDTH}px`;
			wrapper.style.height = `${VIDEO_HEIGHT}px`;
			wrapper.style.position = "absolute";
			wrapper.style.overflow = "hidden";
		}
	});
</script>
